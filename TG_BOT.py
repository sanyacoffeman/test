# Telegram Bot –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ —Ü–µ–Ω
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler
from testr import get_balance_and_prices

import io
import sys

BOT_TOKEN = "7778594685:AAG3g5o0hMlYefMMiQBtCcm8m5zFkWrSp1I"

# ID —á–∞—Ç–∞, –∫—É–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
user_chat_id = None

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
def capture_output():
    buffer = io.StringIO()
    sys.stdout = buffer
    get_balance_and_prices()
    sys.stdout = sys.__stdout__
    return buffer.getvalue()

# –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–ª–∞—Ç—å –±–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
def send_auto_balance(app):
    if user_chat_id:
        text = capture_output()
        app.bot.send_message(chat_id=user_chat_id, text=text)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global user_chat_id
    user_chat_id = update.effective_chat.id
    await update.message.reply_text("üîî –ü–æ–¥–ø–∏—Å–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞! –ë—É–¥—É —Å–ª–∞—Ç—å —Ç–µ–±–µ –±–∞–ª–∞–Ω—Å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç.")

# –ö–æ–º–∞–Ω–¥–∞ /balance –≤—Ä—É—á–Ω—É—é
async def balance(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = capture_output()
    await update.message.reply_text(text or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("balance", balance))

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = BackgroundScheduler()
scheduler.add_job(send_auto_balance, 'interval', minutes=10, args=[app])
scheduler.start()

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç.")
app.run_polling()